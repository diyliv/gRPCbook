// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/music/music.proto

/*
Package musicpb is a generated protocol buffer package.

It is generated from these files:
	proto/music/music.proto

It has these top-level messages:
	Music
	Author
	MusicRequest
	MusicID
	MusicResponse
	SearchMusicResponse
	UpdateMusicRequest
*/
package musicpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Music struct {
	SongName     string                     `protobuf:"bytes,1,opt,name=songName" json:"songName,omitempty"`
	AuthorInfo   *Author                    `protobuf:"bytes,2,opt,name=authorInfo" json:"authorInfo,omitempty"`
	Description  string                     `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	SongDuration *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=songDuration" json:"songDuration,omitempty"`
}

func (m *Music) Reset()                    { *m = Music{} }
func (m *Music) String() string            { return proto.CompactTextString(m) }
func (*Music) ProtoMessage()               {}
func (*Music) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Music) GetSongName() string {
	if m != nil {
		return m.SongName
	}
	return ""
}

func (m *Music) GetAuthorInfo() *Author {
	if m != nil {
		return m.AuthorInfo
	}
	return nil
}

func (m *Music) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Music) GetSongDuration() *google_protobuf.Timestamp {
	if m != nil {
		return m.SongDuration
	}
	return nil
}

type Author struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age       string `protobuf:"bytes,2,opt,name=age" json:"age,omitempty"`
	Followers string `protobuf:"bytes,3,opt,name=followers" json:"followers,omitempty"`
	Tracks    string `protobuf:"bytes,4,opt,name=tracks" json:"tracks,omitempty"`
}

func (m *Author) Reset()                    { *m = Author{} }
func (m *Author) String() string            { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()               {}
func (*Author) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Author) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Author) GetAge() string {
	if m != nil {
		return m.Age
	}
	return ""
}

func (m *Author) GetFollowers() string {
	if m != nil {
		return m.Followers
	}
	return ""
}

func (m *Author) GetTracks() string {
	if m != nil {
		return m.Tracks
	}
	return ""
}

type MusicRequest struct {
	Add *Music `protobuf:"bytes,1,opt,name=add" json:"add,omitempty"`
}

func (m *MusicRequest) Reset()                    { *m = MusicRequest{} }
func (m *MusicRequest) String() string            { return proto.CompactTextString(m) }
func (*MusicRequest) ProtoMessage()               {}
func (*MusicRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MusicRequest) GetAdd() *Music {
	if m != nil {
		return m.Add
	}
	return nil
}

type MusicID struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *MusicID) Reset()                    { *m = MusicID{} }
func (m *MusicID) String() string            { return proto.CompactTextString(m) }
func (*MusicID) ProtoMessage()               {}
func (*MusicID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MusicID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MusicResponse struct {
	Resp *Music `protobuf:"bytes,1,opt,name=resp" json:"resp,omitempty"`
}

func (m *MusicResponse) Reset()                    { *m = MusicResponse{} }
func (m *MusicResponse) String() string            { return proto.CompactTextString(m) }
func (*MusicResponse) ProtoMessage()               {}
func (*MusicResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MusicResponse) GetResp() *Music {
	if m != nil {
		return m.Resp
	}
	return nil
}

type SearchMusicResponse struct {
	Search *Music `protobuf:"bytes,1,opt,name=search" json:"search,omitempty"`
}

func (m *SearchMusicResponse) Reset()                    { *m = SearchMusicResponse{} }
func (m *SearchMusicResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchMusicResponse) ProtoMessage()               {}
func (*SearchMusicResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SearchMusicResponse) GetSearch() *Music {
	if m != nil {
		return m.Search
	}
	return nil
}

type UpdateMusicRequest struct {
	Req *Music `protobuf:"bytes,1,opt,name=req" json:"req,omitempty"`
}

func (m *UpdateMusicRequest) Reset()                    { *m = UpdateMusicRequest{} }
func (m *UpdateMusicRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateMusicRequest) ProtoMessage()               {}
func (*UpdateMusicRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateMusicRequest) GetReq() *Music {
	if m != nil {
		return m.Req
	}
	return nil
}

func init() {
	proto.RegisterType((*Music)(nil), "music.Music")
	proto.RegisterType((*Author)(nil), "music.Author")
	proto.RegisterType((*MusicRequest)(nil), "music.MusicRequest")
	proto.RegisterType((*MusicID)(nil), "music.MusicID")
	proto.RegisterType((*MusicResponse)(nil), "music.MusicResponse")
	proto.RegisterType((*SearchMusicResponse)(nil), "music.SearchMusicResponse")
	proto.RegisterType((*UpdateMusicRequest)(nil), "music.UpdateMusicRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MusicService service

type MusicServiceClient interface {
	AddMusic(ctx context.Context, in *MusicRequest, opts ...grpc.CallOption) (*MusicID, error)
	GetMusic(ctx context.Context, in *MusicID, opts ...grpc.CallOption) (*MusicResponse, error)
	SearchMusic(ctx context.Context, in *google_protobuf1.StringValue, opts ...grpc.CallOption) (MusicService_SearchMusicClient, error)
	UpdateMusic(ctx context.Context, opts ...grpc.CallOption) (MusicService_UpdateMusicClient, error)
}

type musicServiceClient struct {
	cc *grpc.ClientConn
}

func NewMusicServiceClient(cc *grpc.ClientConn) MusicServiceClient {
	return &musicServiceClient{cc}
}

func (c *musicServiceClient) AddMusic(ctx context.Context, in *MusicRequest, opts ...grpc.CallOption) (*MusicID, error) {
	out := new(MusicID)
	err := grpc.Invoke(ctx, "/music.MusicService/AddMusic", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *musicServiceClient) GetMusic(ctx context.Context, in *MusicID, opts ...grpc.CallOption) (*MusicResponse, error) {
	out := new(MusicResponse)
	err := grpc.Invoke(ctx, "/music.MusicService/GetMusic", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *musicServiceClient) SearchMusic(ctx context.Context, in *google_protobuf1.StringValue, opts ...grpc.CallOption) (MusicService_SearchMusicClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_MusicService_serviceDesc.Streams[0], c.cc, "/music.MusicService/SearchMusic", opts...)
	if err != nil {
		return nil, err
	}
	x := &musicServiceSearchMusicClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MusicService_SearchMusicClient interface {
	Recv() (*SearchMusicResponse, error)
	grpc.ClientStream
}

type musicServiceSearchMusicClient struct {
	grpc.ClientStream
}

func (x *musicServiceSearchMusicClient) Recv() (*SearchMusicResponse, error) {
	m := new(SearchMusicResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *musicServiceClient) UpdateMusic(ctx context.Context, opts ...grpc.CallOption) (MusicService_UpdateMusicClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_MusicService_serviceDesc.Streams[1], c.cc, "/music.MusicService/UpdateMusic", opts...)
	if err != nil {
		return nil, err
	}
	x := &musicServiceUpdateMusicClient{stream}
	return x, nil
}

type MusicService_UpdateMusicClient interface {
	Send(*UpdateMusicRequest) error
	CloseAndRecv() (*google_protobuf1.StringValue, error)
	grpc.ClientStream
}

type musicServiceUpdateMusicClient struct {
	grpc.ClientStream
}

func (x *musicServiceUpdateMusicClient) Send(m *UpdateMusicRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *musicServiceUpdateMusicClient) CloseAndRecv() (*google_protobuf1.StringValue, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(google_protobuf1.StringValue)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for MusicService service

type MusicServiceServer interface {
	AddMusic(context.Context, *MusicRequest) (*MusicID, error)
	GetMusic(context.Context, *MusicID) (*MusicResponse, error)
	SearchMusic(*google_protobuf1.StringValue, MusicService_SearchMusicServer) error
	UpdateMusic(MusicService_UpdateMusicServer) error
}

func RegisterMusicServiceServer(s *grpc.Server, srv MusicServiceServer) {
	s.RegisterService(&_MusicService_serviceDesc, srv)
}

func _MusicService_AddMusic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MusicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MusicServiceServer).AddMusic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/music.MusicService/AddMusic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MusicServiceServer).AddMusic(ctx, req.(*MusicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MusicService_GetMusic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MusicID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MusicServiceServer).GetMusic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/music.MusicService/GetMusic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MusicServiceServer).GetMusic(ctx, req.(*MusicID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MusicService_SearchMusic_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(google_protobuf1.StringValue)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MusicServiceServer).SearchMusic(m, &musicServiceSearchMusicServer{stream})
}

type MusicService_SearchMusicServer interface {
	Send(*SearchMusicResponse) error
	grpc.ServerStream
}

type musicServiceSearchMusicServer struct {
	grpc.ServerStream
}

func (x *musicServiceSearchMusicServer) Send(m *SearchMusicResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MusicService_UpdateMusic_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MusicServiceServer).UpdateMusic(&musicServiceUpdateMusicServer{stream})
}

type MusicService_UpdateMusicServer interface {
	SendAndClose(*google_protobuf1.StringValue) error
	Recv() (*UpdateMusicRequest, error)
	grpc.ServerStream
}

type musicServiceUpdateMusicServer struct {
	grpc.ServerStream
}

func (x *musicServiceUpdateMusicServer) SendAndClose(m *google_protobuf1.StringValue) error {
	return x.ServerStream.SendMsg(m)
}

func (x *musicServiceUpdateMusicServer) Recv() (*UpdateMusicRequest, error) {
	m := new(UpdateMusicRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MusicService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "music.MusicService",
	HandlerType: (*MusicServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddMusic",
			Handler:    _MusicService_AddMusic_Handler,
		},
		{
			MethodName: "GetMusic",
			Handler:    _MusicService_GetMusic_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SearchMusic",
			Handler:       _MusicService_SearchMusic_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "UpdateMusic",
			Handler:       _MusicService_UpdateMusic_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/music/music.proto",
}

func init() { proto.RegisterFile("proto/music/music.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 457 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x6d, 0xda, 0xae, 0x6b, 0x6f, 0xba, 0x09, 0xdd, 0x21, 0xe8, 0xa2, 0x69, 0x54, 0x16, 0x0f,
	0x7d, 0x21, 0x65, 0x85, 0x37, 0x24, 0xa4, 0xa1, 0x4a, 0xa8, 0x20, 0x78, 0x48, 0x81, 0x07, 0xde,
	0xdc, 0xe4, 0x36, 0x8b, 0x68, 0x63, 0xd7, 0x76, 0xd8, 0x5f, 0xf0, 0x35, 0x7c, 0x20, 0xaa, 0xed,
	0xb1, 0xb4, 0xab, 0xf6, 0x12, 0xe5, 0x9e, 0x73, 0xee, 0xf1, 0x39, 0x96, 0xe1, 0xb9, 0x54, 0xc2,
	0x88, 0xf1, 0xba, 0xd2, 0x45, 0xea, 0xbe, 0xb1, 0x45, 0xf0, 0xc8, 0x0e, 0xd1, 0x8b, 0x5c, 0x88,
	0x7c, 0x45, 0x63, 0x0b, 0x2e, 0xaa, 0xe5, 0xd8, 0x14, 0x6b, 0xd2, 0x86, 0xaf, 0xa5, 0xd3, 0x45,
	0x97, 0xfb, 0x82, 0x5b, 0xc5, 0xa5, 0x24, 0xa5, 0x1d, 0xcf, 0xfe, 0x06, 0x70, 0xf4, 0x65, 0x6b,
	0x85, 0x11, 0x74, 0xb5, 0x28, 0xf3, 0xaf, 0x7c, 0x4d, 0x83, 0x60, 0x18, 0x8c, 0x7a, 0xc9, 0xff,
	0x19, 0x5f, 0x01, 0xf0, 0xca, 0xdc, 0x08, 0x35, 0x2b, 0x97, 0x62, 0xd0, 0x1c, 0x06, 0xa3, 0x70,
	0x72, 0x12, 0xbb, 0x3c, 0xd7, 0x96, 0x48, 0x6a, 0x02, 0x1c, 0x42, 0x98, 0x91, 0x4e, 0x55, 0x21,
	0x4d, 0x21, 0xca, 0x41, 0xcb, 0xba, 0xd5, 0x21, 0x7c, 0x0f, 0xfd, 0xad, 0xf9, 0xb4, 0x52, 0xdc,
	0x4a, 0xda, 0xd6, 0x32, 0x8a, 0x5d, 0xda, 0xf8, 0x2e, 0x6d, 0xfc, 0xed, 0xae, 0x4e, 0xb2, 0xa3,
	0x67, 0x19, 0x74, 0xdc, 0xb9, 0x88, 0xd0, 0x2e, 0xef, 0x23, 0xdb, 0x7f, 0x7c, 0x02, 0x2d, 0x9e,
	0x93, 0xcd, 0xd9, 0x4b, 0xb6, 0xbf, 0x78, 0x01, 0xbd, 0xa5, 0x58, 0xad, 0xc4, 0x2d, 0x29, 0xed,
	0xf3, 0xdc, 0x03, 0xf8, 0x0c, 0x3a, 0x46, 0xf1, 0xf4, 0x97, 0xb6, 0x39, 0x7a, 0x89, 0x9f, 0x58,
	0x0c, 0x7d, 0x7b, 0x37, 0x09, 0x6d, 0x2a, 0xd2, 0x06, 0x2f, 0xa1, 0xc5, 0xb3, 0xcc, 0x1e, 0x15,
	0x4e, 0xfa, 0xbe, 0xbf, 0x53, 0x6c, 0x09, 0x76, 0x0e, 0xc7, 0x76, 0x9a, 0x4d, 0xf1, 0x14, 0x9a,
	0x45, 0xe6, 0x43, 0x35, 0x8b, 0x8c, 0x5d, 0xc1, 0x89, 0xb7, 0xd2, 0x52, 0x94, 0x9a, 0x70, 0x08,
	0x6d, 0x45, 0x5a, 0x1e, 0x34, 0xb3, 0x0c, 0x7b, 0x07, 0x67, 0x73, 0xe2, 0x2a, 0xbd, 0xd9, 0x5d,
	0x7c, 0x09, 0x1d, 0x6d, 0xe1, 0x83, 0xab, 0x9e, 0x63, 0x6f, 0x01, 0xbf, 0xcb, 0x8c, 0x1b, 0xda,
	0x2f, 0xa0, 0x68, 0x73, 0xb8, 0x80, 0xa2, 0xcd, 0xe4, 0x4f, 0xd3, 0x37, 0x9e, 0x93, 0xfa, 0x5d,
	0xa4, 0x84, 0x57, 0xd0, 0xbd, 0xce, 0x32, 0xf7, 0x40, 0xce, 0x76, 0xf4, 0xce, 0x31, 0x3a, 0xad,
	0x83, 0xb3, 0x29, 0x6b, 0xe0, 0x04, 0xba, 0x1f, 0xc9, 0xb8, 0x95, 0x3d, 0x36, 0x7a, 0xba, 0x6b,
	0xe1, 0x1a, 0xb1, 0x06, 0x7e, 0x86, 0xb0, 0x56, 0x15, 0x2f, 0x1e, 0xbc, 0x83, 0xb9, 0x51, 0x45,
	0x99, 0xff, 0xe0, 0xab, 0x8a, 0xa2, 0xc8, 0x9b, 0x1c, 0xb8, 0x1c, 0xd6, 0x78, 0x1d, 0xe0, 0x27,
	0x08, 0x6b, 0xd5, 0xf1, 0xdc, 0xcb, 0x1f, 0x5e, 0x47, 0xf4, 0xe8, 0x39, 0xac, 0x31, 0x0a, 0x3e,
	0xf4, 0x7e, 0x1e, 0xdb, 0x6d, 0xb9, 0x58, 0x74, 0xac, 0xe8, 0xcd, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xce, 0x4e, 0xca, 0xb8, 0x93, 0x03, 0x00, 0x00,
}
